<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
                   assembly="Bilten.Domain"
                   namespace="Bilten.Domain">

  <class name="Gimnasticar" table="gimnasticari" lazy="true">
    <id name="Id" column="gimnasticar_id" access="nosetter.camelcase">
      <generator class="identity" />
    </id>
    <property name="Ime" column="ime" type="String" length="32" />
    <property name="SrednjeIme" column="srednje_ime" type="String" length="32" />
    <property name="Prezime" />
    <component name="DatumRodjenja" class="Datum">
      <property name="Dan" column="dan_rodj" type="Byte" />
      <property name="Mesec" column="mesec_rodj" type="Byte" />
      <property name="Godina" column="god_rodj" type="Int16" />
    </component>
    <property name="Gimnastika" column="gimnastika" type="Byte" />
    <property name="RegistarskiBroj" column="registarski_broj" type="String" length="16"/>
    <component name="DatumPoslednjeRegistracije" class="Datum">
      <property name="Dan" column="dan_posl_reg" type="Byte" />
      <property name="Mesec" column="mesec_posl_reg" type="Byte" />
      <property name="Godina" column="god_posl_reg" type="Int16" />
    </component>
    <many-to-one name="Kategorija" class="KategorijaGimnasticara" column="kat_id" />
    <many-to-one name="Klub" class="Klub" column="klub_id" />
    <many-to-one name="Drzava" class="Drzava" column="drzava_id" />
  </class>

  <query name="FindGimnasticariByTakmicenje">
    <![CDATA[
      select distinct g
      from Gimnasticar g, GimnasticarUcesnik gu 
      where g.Ime = gu.Ime and g.Prezime = gu.Prezime
      and gu.TakmicarskaKategorija.Takmicenje = :takmicenje
      order by g.Prezime, g.Ime
    ]]>
  </query>

</hibernate-mapping>
